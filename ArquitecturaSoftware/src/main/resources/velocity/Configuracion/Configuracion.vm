<!-- NAVBAR -->
#parse("/velocity/navbar.vm")
#@mainLayout()
#end
<style>
body{
  font-family: "Helvetica";
  background-image: url('https://besthqwallpapers.com/Uploads/24-11-2019/113120/vodafone-leather-logo-black-leather-texture-emblem-vodafone-creative-art.jpg');
  background-size: cover;
}

#customers {
  border-collapse: collapse;
  width: 100%;
background-color: #ddd;
 
}

#customers td, #customers th {
  border: 0.5px solid   #AAAAAA;
  padding: 8px;
}

#customers tr:nth-child(even){background-color: #f2f2f2;}


#customers th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  background-color: #03a45e;
  color: white;
}

.title{
	color:white;
	font-size:30px;
	margin: auto;
	text-align: left;
	width: 700px;
}
.container{
    margin: auto;
	text-align: center;
    width: 1300px;
}

.button {
	background-color: LightSlateGrey; 
	color: white;
	text-decoration: none;
	height:50px;
	width: 150px;
	font-size: 16px; 
	margin-right:80px; 
	border-radius:30px;
}
	

.card{
 	background: rgba(0, 0, 0, 0.4);
}

.title-Container{
	margin:auto;
    width: 1300px;
    display: flex;
	text-align:center;
  	height:150px;
}

.form{
	margin:auto;
	
	text-align:center;
}





.container{
  display: block;
  position: relative;
  margin: 40px auto;
  height: auto;
  width: 500px;
  padding: 20px;
}

h2 {
	color: #AAAAAA ;
}

.container ul{
  list-style: none;
  margin: 0;
  padding: 0;
	overflow: auto;
}

ul li{
  background-color: #222222;
  color: #AAAAAA ;
  display: block;
  position: relative;
  float: left;
  width: 100%;
  height: 100px;
  border-bottom: 1px solid #333;
}

ul li input[type=radio]{
  position: absolute;
  visibility: hidden;
}

ul li label{
  display: block;
  position: relative;
  font-weight: 300;
  font-size: 1.35em;
  padding: 25px 25px 25px 80px;
  margin: 10px auto;
  height: 30px;
  z-index: 9;
  cursor: pointer;
  -webkit-transition: all 0.25s linear;
}

ul li:hover label{
	color: #AAAAAA;
}

ul li .check{
  display: block;
  position: absolute;
  border: 5px solid #AAAAAA;
  border-radius: 100%;
  height: 25px;
  width: 25px;
  top: 30px;
  left: 20px;
	z-index: 5;
	transition: border .25s linear;
	-webkit-transition: border .25s linear;
}

ul li:hover .check {
  border: 5px solid #FFFFFF;
}

ul li .check::before {
  display: block;
  position: absolute;
	content: '';
  border-radius: 100%;
  height: 15px;
  width: 15px;
  top: 5px;
	left: 5px;
  margin: auto;
	transition: background 0.25s linear;
	-webkit-transition: background 0.25s linear;
}

input[type=radio]:checked ~ .check {
  border: 5px solid #0DFF92;
}

input[type=radio]:checked ~ .check::before{
  background: #0DFF92;
}

input[type=radio]:checked ~ label{
  color: #0DFF92;
}


</style>
<header>
</header>
<body>

	<div class="card">
		<div class="title-Container">
			<div class="title">
				<h1>Seleccione el Archivo. </h1>
			</div>
		</div>
	</div>
	
	<div class="container">
	<form action="CDRs" method="post">
	<h2>Seleccione el Tipo de Archivo:</h2>
	
	  <ul>
		  <li>
		    <input type="radio" id="f-option" name="tipoArchivo" value="csv" required>
		    <label for="f-option">Archivo CSV</label>
		    
		    <div class="check"></div>
		  </li>
		  
		  <li>
		    <input type="radio" id="s-option" name="tipoArchivo" value="sql">
		    <label for="s-option">Archivo SQL</label>
		    
		    <div class="check"><div class="inside"></div></div>
		  </li>
		  
		  
		</ul>
	</div>
	
	
	
	<div class="form">
		
				<p>
		   	<h2>Seleccionar el Archivo: </h2> 
		   	<input type='file' onchange='onChooseFile(event, onFileLoad.bind(this, "contents"))' />
			<input type="hidden" id="contenidoArchivo" name="contenidoArchivo" value="" />
			<p>
			
			<input type="submit" class="button" value="Cargar">
		
	</div>
	
	</form>
	
	<script>
		function onFileLoad(elementId, event) {
			document.getElementById('contenidoArchivo').value = event.target.result;
		}
		
		function onChooseFile(event, onLoadFileHandler) {
		    if (typeof window.FileReader !== 'function')
		        throw ("The file API isn't supported on this browser.");
		    let input = event.target;
		    if (!input)
		        throw ("The browser does not properly implement the event object");
		    if (!input.files)
		        throw ("This browser does not support the `files` property of the file input.");
		    if (!input.files[0])
		        return undefined;
		    let file = input.files[0];
		    let fr = new FileReader();
		    fr.onload = onLoadFileHandler;
		    fr.readAsText(file);
		}
	</script>
	
</body>
